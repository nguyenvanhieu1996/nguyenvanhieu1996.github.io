{"version":3,"sources":["router/PrivateTemplate.js","router/PublicTemplate.js","router/login.js","router/Home.js","router/ChildDetail.js","router/Detail.js","router/Contact.js","router/Register.js","refs/Detail.js","refs/home.js","redux-saga/contants.js","redux-saga/reducers/imageReducers.js","redux-saga/reducers/errorReducers.js","redux-saga/reducers/loadingReducers.js","redux-saga/reducers/pageReducers.js","redux-saga/reducers/index.js","redux-saga/sagas/imagesSaga.js","redux-saga/sagas/index.js","store/index.js","components/Book_Redux.js","redux-saga/actions/index.js","AppRoute.js","serviceWorker.js","redux-saga/Home/saga.js","index.js"],"names":["PrivateTemplate","children","rest","useState","auth","result","name","parts","document","cookie","split","length","pop","shift","getCookie","console","log","render","location","props","to","pathname","state","from","PublicTemplate","whiteList","history","useHistory","useLocation","checkRouter","includes","path","push","useEffect","Login","isAuth","setIsAuth","onClick","replace","logout","Home","nextLink","ChildDetail","id","useParams","a","useRouteMatch","Detail","title","Contact","Register","forwardRef","ref","useImperativeHandle","getAlert","alert","childRef","useRef","type","current","IMAGES","LOAD","LOAD_SUCCESS","LOAD_FAIL","imagesReducer","action","images","errorReducer","loadingReducer","pageReducer","rootReducer","combineReducers","error","loading","nextPage","handleImagesLoad","watchImagesLoad","getPage","select","page","takeEvery","imagesSaga","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","rootSaga","connect","isLoading","dispatch","loadImages","AuthExample","exact","Boolean","hostname","match","helloSaga","printName","next","ReactDOM","AppRoute","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1cff712.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst PrivateTemplate = ({ children, ...rest }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const getCookie = (name) => {\r\n        const value = \"; \" + document.cookie;\r\n        const parts = value.split(\"; \" + name + \"=\");\r\n        if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n    }\r\n    const auth = () => {\r\n        let result = getCookie('auth')\r\n        console.log('result', !!result);\r\n        return !!result\r\n    }\r\n    console.log('rest', rest);\r\n    // useEffect(() => {\r\n    //     auth()\r\n    // })\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location, props }) =>(\r\n                auth() ? (\r\n                    children\r\n                ) : (\r\n                    <>\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    </>\r\n                )\r\n            )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateTemplate.propTypes = {};\r\n\r\nexport default PrivateTemplate;","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useRouteMatch,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nconst PublicTemplate = ({ children, ...rest }) => {\r\n    const whiteList = [\r\n        '/contact'\r\n    ]\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const getCookie = (name) => {\r\n        const value = \"; \" + document.cookie;\r\n        const parts = value.split(\"; \" + name + \"=\");\r\n        if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n    }\r\n    const checkRouter = () => {\r\n        if (!getCookie('auth')) return false // not cookie\r\n        if (whiteList.includes(rest.path)) return false\r\n        console.log('aaaaaaaaaaaaaaa');\r\n        let { from } = location.state || { from: { pathname: \"/home\" } };\r\n        history.push(from);\r\n    }\r\n    useEffect(() => {\r\n        checkRouter()\r\n    })\r\n    return (\r\n        <div>\r\n            <div>Header</div>\r\n            <Route\r\n                {...rest}\r\n                render={({ location }) =>\r\n                    children\r\n                }\r\n\r\n            />\r\n            <div>Footer</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPublicTemplate.propTypes = {};\r\n\r\nexport default PublicTemplate;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    // let history = useHistory();\r\n    // let location = useLocation();\r\n    //\r\n    // let { from } = location.state || { from: { pathname: \"/\" } };\r\n    // let login = () => {\r\n    //     fakeAuth.authenticate(() => {\r\n    //         history.replace(from);\r\n    //     });\r\n    // };\r\n\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const [isAuth, setIsAuth] = useState(false)\r\n    const getCookie = (name) => {\r\n        const value = \"; \" + document.cookie;\r\n        const parts = value.split(\"; \" + name + \"=\");\r\n        if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n    }\r\n    const auth = () => {\r\n        document.cookie = 'auth=' + 123 + ';'\r\n        setIsAuth(true)\r\n        let { from } = location.state || { from: { pathname: \"/home\" } };\r\n        history.replace(from);\r\n    }\r\n    const logout = () => {\r\n        document.cookie = 'auth='\r\n        setIsAuth(false)\r\n        let { from } = location.state || { from: { pathname: \"/login\" } };\r\n        history.replace(from);\r\n    }\r\n    const checkLogin = () => {\r\n        console.log('checkLogin !!getCookie()', !!getCookie('auth'));\r\n        return !!getCookie('auth')\r\n    }\r\n    return (\r\n        <>{checkLogin() ? (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/home\",\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n            ) :\r\n            (\r\n                <div>\r\n                    {\r\n                        !isAuth ? (\r\n                            <button onClick={() => auth()}>Login</button>\r\n                        ) : (\r\n                            <button onClick={() => logout()}>Logout</button>\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        }</>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n    useLocation,\r\n} from \"react-router-dom\";\r\nconst Home = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const nextLink = () => {\r\n        console.log('location.state', location);\r\n        let { from } = location.state || { from: { pathname: \"/home/1\" } };\r\n        history.replace(from);\r\n    }\r\n    return (\r\n        <div>\r\n            this is home page\r\n            {/*<Link to=\"/user\">Link User</Link>*/}\r\n            <div onClick={() => nextLink()}>Link User</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst ChildDetail = props => {\r\n    let { id } = useParams();\r\n    let a = useRouteMatch();\r\n    console.log('useRouteMatch', a);\r\n    console.log('id', id);\r\n    console.log('props ChildDetail', props);\r\n    return (\r\n        <div>\r\n            Child Detail\r\n        </div>\r\n    );\r\n};\r\n\r\nChildDetail.propTypes = {};\r\n\r\nexport default ChildDetail;","import React from 'react';\r\nimport ChildDetail from \"./ChildDetail\";\r\n\r\nconst Detail = (props) => {\r\n    console.log('props Detail', props);\r\n    const title = 'Child Detail'\r\n    return (\r\n        <div>\r\n            this is detail page\r\n            <ChildDetail title={title}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = props => {\r\n    return (\r\n        <div>\r\n            This is contact\r\n        </div>\r\n    );\r\n};\r\n\r\nContact.propTypes = {\r\n\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = props => {\r\n    return (\r\n        <div>\r\n            This is register page\r\n        </div>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n\r\n};\r\n\r\nexport default Register;","import React, { forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Detail = forwardRef((props, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n        getAlert() {\r\n            alert(\"getAlert from Child\");\r\n        }\r\n    }));\r\n    return (\r\n        <div>\r\n            This is detail page\r\n        </div>\r\n    );\r\n});\r\n\r\nDetail.propTypes = {};\r\n\r\nexport default Detail;","import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Detail from \"./Detail\";\r\n\r\nconst Home = props => {\r\n    const childRef = useRef();\r\n    const focusInput = () => {\r\n        childRef.current.getAlert()\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"text\"/>\r\n            this is home page\r\n            <button onClick={focusInput}>Click</button>\r\n            <Detail ref={childRef}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n\r\n};\r\n\r\nexport default Home;","const IMAGES = {\r\n    LOAD: 'IMAGES_LOAD',\r\n    LOAD_SUCCESS: 'IMAGES_LOAD_SUCCESS',\r\n    LOAD_FAIL: 'IMAGES_LOAD_FAIL'\r\n}\r\nexport { IMAGES }","import { IMAGES } from \"../contants\";\r\n\r\nconst imagesReducer = (state = [], action) => {\r\n    if (action.type === IMAGES.LOAD_SUCCESS) {\r\n        return [...state, ...action.images]\r\n    }\r\n    return state\r\n}\r\nexport default imagesReducer;","import {IMAGES} from \"../contants\";\r\nconst errorReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case IMAGES.LOAD:\r\n            return true\r\n        case IMAGES.LOAD_SUCCESS:\r\n            return false\r\n        case IMAGES.LOAD_FAIL:\r\n            return true\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default errorReducer;","import {IMAGES} from \"../contants\";\r\nconst loadingReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case IMAGES.LOAD:\r\n            return true\r\n        case IMAGES.LOAD_SUCCESS:\r\n            return false\r\n        case IMAGES.LOAD_FAIL:\r\n            return true\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default loadingReducer;","import {IMAGES} from \"../contants\";\r\nconst pageReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n\r\n        case IMAGES.LOAD_SUCCESS:\r\n            return state + 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default pageReducer;","import { combineReducers } from 'redux'\r\nimport imagesReducer from \"./imageReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport loadingReducer from \"./loadingReducers\";\r\nimport pageReducer from \"./pageReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    images: imagesReducer,\r\n    error: errorReducer,\r\n    loading: loadingReducer,\r\n    nextPage: pageReducer,\r\n})\r\nexport default rootReducer","import { takeEvery, select } from 'redux-saga/effects'\r\nimport { IMAGES } from \"../contants\";\r\n\r\nconst getPage = state => state.nextPage\r\n\r\nfunction* handleImagesLoad() {\r\n    const page = yield select(getPage)\r\n    console.log('page', page);\r\n}\r\n\r\nexport default function* watchImagesLoad() {\r\n    yield takeEvery(IMAGES.LOAD, handleImagesLoad)\r\n}","import imagesSaga from './imagesSaga'\r\n\r\nexport default imagesSaga","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../redux-saga/reducers\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from \"../redux-saga/sagas\";\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        compose(\r\n            applyMiddleware(sagaMiddleware),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n    )\r\n    sagaMiddleware.run(rootSaga)\r\n    return store\r\n}\r\nexport default configureStore","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { loadImages } from \"../redux-saga/actions\";\r\n\r\nconst BookRedux = ({ loadImages }) => {\r\n    return (\r\n        <div onClick={() => loadImages()}>\r\n            book redux\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = ({ isLoading, images, error }) => ({\r\n    isLoading,\r\n    images,\r\n    error\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadImages:() =>  dispatch(loadImages())\r\n})\r\nBookRedux.propTypes = {};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(BookRedux);","import { IMAGES } from \"../contants\";\r\n\r\nconst loadImages = () => ({\r\n    type: IMAGES.LOAD,\r\n})\r\nconst setImages = images => ({\r\n    type: IMAGES.LOAD_SUCCESS,\r\n    images\r\n})\r\n\r\nconst setError = error => ({\r\n    type: IMAGES.LOAD_FAIL,\r\n    error\r\n})\r\nexport {\r\n    loadImages,\r\n    setImages,\r\n    setError\r\n}","import React from \"react\";\r\nimport { Provider } from 'react-redux'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport PrivateTemplate from \"./router/PrivateTemplate\";\r\nimport PublicTemplate from \"./router/PublicTemplate\";\r\nimport Login from \"./router/login\";\r\nimport Home from \"./router/Home\";\r\nimport Detail from \"./router/Detail\";\r\nimport Contact from \"./router/Contact\";\r\nimport Register from \"./router/Register\";\r\nimport HomeRef from \"./refs/home\";\r\nimport configureStore from \"./store\";\r\nimport BookRedux from \"./components/Book_Redux\";\r\nconst store = configureStore()\r\nconst AuthExample = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <div>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/login\">Login page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/home\">Home Page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/detail\">Detail Page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/contact\">Contact Page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/register\">Register Page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/home-ref\">Home Ref Page</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/book-redux\">Book Redux Saga Page</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <Switch>\r\n                        <PublicTemplate exact path=\"/login\">\r\n                            <Login/>\r\n                        </PublicTemplate>\r\n                        <PublicTemplate exact path=\"/contact\">\r\n                            <Contact/>\r\n                        </PublicTemplate>\r\n                        <PublicTemplate exact path=\"/register\">\r\n                            <Register/>\r\n                        </PublicTemplate>\r\n                        <PrivateTemplate exact path=\"/home\">\r\n                            <Home/>\r\n                        </PrivateTemplate>\r\n                        <PrivateTemplate exact path=\"/detail\">\r\n                            <Detail/>\r\n                        </PrivateTemplate>\r\n                        <PrivateTemplate exact path=\"/home-ref\">\r\n                            <HomeRef/>\r\n                        </PrivateTemplate>\r\n                        <PrivateTemplate exact path=\"/book-redux\">\r\n                            <BookRedux/>\r\n                        </PrivateTemplate>\r\n                        <Home/>\r\n                        {/*<PublicTemplate path=\"*\">*/}\r\n                        {/*    <Home />*/}\r\n                        {/*</PublicTemplate>*/}\r\n                        <PublicTemplate path=\"*\">\r\n                            <Login/>\r\n                        </PublicTemplate>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n}\r\nexport default AuthExample\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","console.log('Hello Sagas!')\r\n function* helloSaga() {\r\n    yield 2020\r\n}\r\nfunction* printName() {\r\n    yield 'xin chào'\r\n    yield* helloSaga()\r\n    yield 'chúc mừng năm mới'\r\n}\r\nconst result = printName()\r\nconsole.log('result', result.next());\r\nconsole.log('result 1', result.next());\r\nconsole.log('result 2', result.next());\r\nconsole.log('result 3', result.next());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport AppRoute from './AppRoute';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/redux-saga/Home/saga'\nReactDOM.render(<AppRoute />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}